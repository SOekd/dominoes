plugins {
    id 'java'
    id 'application'
    id 'org.javamodularity.moduleplugin' version '1.8.12'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.25.0'
}

group 'dominoes'
version '1.0.0'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.9.2'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'dominoes.dominoes'
    mainClass = 'dominoes.dominoes.Dominoes'
}

javafx {
    version = '17.0.8'
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.web']
}

dependencies {
    implementation('org.kordamp.ikonli:ikonli-javafx:12.3.1')
    implementation('org.kordamp.ikonli:ikonli-feather-pack:12.3.1')
    implementation('org.kordamp.ikonli:ikonli-material2-pack:12.3.1')
    implementation 'io.github.mkpaz:atlantafx-base:2.0.1'
    implementation("org.jetbrains:annotations:24.1.0")

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
    useJUnitPlatform()
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'app'
    }
    jpackage {
        def currentOs = org.gradle.internal.os.OperatingSystem.current()
        if (currentOs.windows) {
            installerOptions += ['--win-per-user-install', '--win-dir-chooser', '--win-menu']
        }

        installerOptions += [
                '--vendor', 'Dominoes',
                '--app-version', version
        ]
    }
}

jlinkZip {
    group = 'distribution'
}