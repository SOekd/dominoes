name: Build and Release Dominoes

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
          - os: windows-latest
            platform: win

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Set up Gradle
        uses: gradle/gradle-build-action@v2

      - name: Extract Version
        id: extract_version
        run: |
          VERSION=$(./gradlew properties -q | grep "version:" | awk '{print $2}')
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Build with Gradle
        run: ./gradlew jlinkZip --info --stacktrace
        env:
          JAVA_HOME: ${{ steps.setup-java.outputs.path }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-${{ matrix.platform }}
          path: build/distributions/app-${{ matrix.platform }}.zip

  release:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Linux Artifact
        uses: actions/download-artifact@v3
        with:
          name: app-linux
          path: dist/

      - name: Download Windows Artifact
        uses: actions/download-artifact@v3
        with:
          name: app-win
          path: dist/

      - name: Create Release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: v${{ env.VERSION }}
          release_name: v${{ env.VERSION }}
          files: |
            dist/app-linux.zip
            dist/app-win.zip
