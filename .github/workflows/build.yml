name: Build and Release Dominoes

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

permissions: write-all

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        java: [ '17' ]
      fail-fast: false
    name: Build and Release on ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: gradle/wrapper-validation-action@v1
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: ${{ matrix.java }}
      - name: Configure Git
        run: git config --global user.email "action@github.com" && git config --global user.name "Github Action"
      - name: Set outputs
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Execute build
        run: ./gradlew --info --stacktrace build
      - name: Execute jlink
        run: ./gradlew --info --stacktrace jlink
      - name: Execute jpackage
        run: ./gradlew --info --stacktrace jpackage
      - name: Prepare artifacts (Linux and macOS)
        if: matrix.os != 'windows-latest'
        run: |
          mkdir -p ./build/artifacts
          cp ./build/jpackage/* ./build/artifacts/
        shell: bash
      - name: Prepare artifacts (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          mkdir -p build\artifacts
          copy build\jpackage\* build\artifacts\
        shell: cmd
      - name: Release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          title: "Dominoes ${{ steps.vars.outputs.sha_short }}"
          automatic_release_tag: "${{ steps.vars.outputs.sha_short }}"
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          files: "./build/artifacts/*"
          prerelease: false